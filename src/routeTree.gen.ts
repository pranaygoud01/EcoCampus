/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SellProjectRouteImport } from './routes/sell-project'
import { Route as SellRouteImport } from './routes/sell'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as ContactRouteImport } from './routes/contact'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProjectsIndexRouteImport } from './routes/projects/index'
import { Route as BrowseIndexRouteImport } from './routes/browse/index'
import { Route as ProjectsIdRouteImport } from './routes/projects/$id'
import { Route as BrowseProductsRouteImport } from './routes/browse/products'
import { Route as BrowseOthersRouteImport } from './routes/browse/others'
import { Route as BrowseLabcoatsRouteImport } from './routes/browse/labcoats'
import { Route as BrowseInstrumentsRouteImport } from './routes/browse/instruments'
import { Route as BrowseGadgetsRouteImport } from './routes/browse/gadgets'
import { Route as BrowseBooksRouteImport } from './routes/browse/books'
import { Route as BrowseProductIdRouteImport } from './routes/browse/product/$id'

const SellProjectRoute = SellProjectRouteImport.update({
  id: '/sell-project',
  path: '/sell-project',
  getParentRoute: () => rootRouteImport,
} as any)
const SellRoute = SellRouteImport.update({
  id: '/sell',
  path: '/sell',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const ContactRoute = ContactRouteImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsIndexRoute = ProjectsIndexRouteImport.update({
  id: '/projects/',
  path: '/projects/',
  getParentRoute: () => rootRouteImport,
} as any)
const BrowseIndexRoute = BrowseIndexRouteImport.update({
  id: '/browse/',
  path: '/browse/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsIdRoute = ProjectsIdRouteImport.update({
  id: '/projects/$id',
  path: '/projects/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const BrowseProductsRoute = BrowseProductsRouteImport.update({
  id: '/browse/products',
  path: '/browse/products',
  getParentRoute: () => rootRouteImport,
} as any)
const BrowseOthersRoute = BrowseOthersRouteImport.update({
  id: '/browse/others',
  path: '/browse/others',
  getParentRoute: () => rootRouteImport,
} as any)
const BrowseLabcoatsRoute = BrowseLabcoatsRouteImport.update({
  id: '/browse/labcoats',
  path: '/browse/labcoats',
  getParentRoute: () => rootRouteImport,
} as any)
const BrowseInstrumentsRoute = BrowseInstrumentsRouteImport.update({
  id: '/browse/instruments',
  path: '/browse/instruments',
  getParentRoute: () => rootRouteImport,
} as any)
const BrowseGadgetsRoute = BrowseGadgetsRouteImport.update({
  id: '/browse/gadgets',
  path: '/browse/gadgets',
  getParentRoute: () => rootRouteImport,
} as any)
const BrowseBooksRoute = BrowseBooksRouteImport.update({
  id: '/browse/books',
  path: '/browse/books',
  getParentRoute: () => rootRouteImport,
} as any)
const BrowseProductIdRoute = BrowseProductIdRouteImport.update({
  id: '/browse/product/$id',
  path: '/browse/product/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/dashboard': typeof DashboardRoute
  '/sell': typeof SellRoute
  '/sell-project': typeof SellProjectRoute
  '/browse/books': typeof BrowseBooksRoute
  '/browse/gadgets': typeof BrowseGadgetsRoute
  '/browse/instruments': typeof BrowseInstrumentsRoute
  '/browse/labcoats': typeof BrowseLabcoatsRoute
  '/browse/others': typeof BrowseOthersRoute
  '/browse/products': typeof BrowseProductsRoute
  '/projects/$id': typeof ProjectsIdRoute
  '/browse': typeof BrowseIndexRoute
  '/projects': typeof ProjectsIndexRoute
  '/browse/product/$id': typeof BrowseProductIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/dashboard': typeof DashboardRoute
  '/sell': typeof SellRoute
  '/sell-project': typeof SellProjectRoute
  '/browse/books': typeof BrowseBooksRoute
  '/browse/gadgets': typeof BrowseGadgetsRoute
  '/browse/instruments': typeof BrowseInstrumentsRoute
  '/browse/labcoats': typeof BrowseLabcoatsRoute
  '/browse/others': typeof BrowseOthersRoute
  '/browse/products': typeof BrowseProductsRoute
  '/projects/$id': typeof ProjectsIdRoute
  '/browse': typeof BrowseIndexRoute
  '/projects': typeof ProjectsIndexRoute
  '/browse/product/$id': typeof BrowseProductIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/dashboard': typeof DashboardRoute
  '/sell': typeof SellRoute
  '/sell-project': typeof SellProjectRoute
  '/browse/books': typeof BrowseBooksRoute
  '/browse/gadgets': typeof BrowseGadgetsRoute
  '/browse/instruments': typeof BrowseInstrumentsRoute
  '/browse/labcoats': typeof BrowseLabcoatsRoute
  '/browse/others': typeof BrowseOthersRoute
  '/browse/products': typeof BrowseProductsRoute
  '/projects/$id': typeof ProjectsIdRoute
  '/browse/': typeof BrowseIndexRoute
  '/projects/': typeof ProjectsIndexRoute
  '/browse/product/$id': typeof BrowseProductIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/contact'
    | '/dashboard'
    | '/sell'
    | '/sell-project'
    | '/browse/books'
    | '/browse/gadgets'
    | '/browse/instruments'
    | '/browse/labcoats'
    | '/browse/others'
    | '/browse/products'
    | '/projects/$id'
    | '/browse'
    | '/projects'
    | '/browse/product/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/contact'
    | '/dashboard'
    | '/sell'
    | '/sell-project'
    | '/browse/books'
    | '/browse/gadgets'
    | '/browse/instruments'
    | '/browse/labcoats'
    | '/browse/others'
    | '/browse/products'
    | '/projects/$id'
    | '/browse'
    | '/projects'
    | '/browse/product/$id'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/contact'
    | '/dashboard'
    | '/sell'
    | '/sell-project'
    | '/browse/books'
    | '/browse/gadgets'
    | '/browse/instruments'
    | '/browse/labcoats'
    | '/browse/others'
    | '/browse/products'
    | '/projects/$id'
    | '/browse/'
    | '/projects/'
    | '/browse/product/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  ContactRoute: typeof ContactRoute
  DashboardRoute: typeof DashboardRoute
  SellRoute: typeof SellRoute
  SellProjectRoute: typeof SellProjectRoute
  BrowseBooksRoute: typeof BrowseBooksRoute
  BrowseGadgetsRoute: typeof BrowseGadgetsRoute
  BrowseInstrumentsRoute: typeof BrowseInstrumentsRoute
  BrowseLabcoatsRoute: typeof BrowseLabcoatsRoute
  BrowseOthersRoute: typeof BrowseOthersRoute
  BrowseProductsRoute: typeof BrowseProductsRoute
  ProjectsIdRoute: typeof ProjectsIdRoute
  BrowseIndexRoute: typeof BrowseIndexRoute
  ProjectsIndexRoute: typeof ProjectsIndexRoute
  BrowseProductIdRoute: typeof BrowseProductIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sell-project': {
      id: '/sell-project'
      path: '/sell-project'
      fullPath: '/sell-project'
      preLoaderRoute: typeof SellProjectRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sell': {
      id: '/sell'
      path: '/sell'
      fullPath: '/sell'
      preLoaderRoute: typeof SellRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/': {
      id: '/projects/'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/browse/': {
      id: '/browse/'
      path: '/browse'
      fullPath: '/browse'
      preLoaderRoute: typeof BrowseIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/$id': {
      id: '/projects/$id'
      path: '/projects/$id'
      fullPath: '/projects/$id'
      preLoaderRoute: typeof ProjectsIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/browse/products': {
      id: '/browse/products'
      path: '/browse/products'
      fullPath: '/browse/products'
      preLoaderRoute: typeof BrowseProductsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/browse/others': {
      id: '/browse/others'
      path: '/browse/others'
      fullPath: '/browse/others'
      preLoaderRoute: typeof BrowseOthersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/browse/labcoats': {
      id: '/browse/labcoats'
      path: '/browse/labcoats'
      fullPath: '/browse/labcoats'
      preLoaderRoute: typeof BrowseLabcoatsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/browse/instruments': {
      id: '/browse/instruments'
      path: '/browse/instruments'
      fullPath: '/browse/instruments'
      preLoaderRoute: typeof BrowseInstrumentsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/browse/gadgets': {
      id: '/browse/gadgets'
      path: '/browse/gadgets'
      fullPath: '/browse/gadgets'
      preLoaderRoute: typeof BrowseGadgetsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/browse/books': {
      id: '/browse/books'
      path: '/browse/books'
      fullPath: '/browse/books'
      preLoaderRoute: typeof BrowseBooksRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/browse/product/$id': {
      id: '/browse/product/$id'
      path: '/browse/product/$id'
      fullPath: '/browse/product/$id'
      preLoaderRoute: typeof BrowseProductIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  ContactRoute: ContactRoute,
  DashboardRoute: DashboardRoute,
  SellRoute: SellRoute,
  SellProjectRoute: SellProjectRoute,
  BrowseBooksRoute: BrowseBooksRoute,
  BrowseGadgetsRoute: BrowseGadgetsRoute,
  BrowseInstrumentsRoute: BrowseInstrumentsRoute,
  BrowseLabcoatsRoute: BrowseLabcoatsRoute,
  BrowseOthersRoute: BrowseOthersRoute,
  BrowseProductsRoute: BrowseProductsRoute,
  ProjectsIdRoute: ProjectsIdRoute,
  BrowseIndexRoute: BrowseIndexRoute,
  ProjectsIndexRoute: ProjectsIndexRoute,
  BrowseProductIdRoute: BrowseProductIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
